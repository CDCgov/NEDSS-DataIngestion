apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: kafka
  name: kafka
spec:
  replicas: 2
  selector:
    matchLabels:
      service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: kafka
    spec:
      enableServiceLinks: false
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: confluentinc/cp-kafka:7.3.0
        ports:
          - containerPort: 29092
          - containerPort: 9092
        env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_LISTENERS
            value: "INTERNAL://kafka:29092,EXTERNAL://kafka:9092"
          - name: KAFKA_ADVERTISED_LISTENERS
          # EXTERNAL ADDRESS NEED TO BE Load balancer address
            value: "INTERNAL://kafka:29092,EXTERNAL://<PUBLIC ADDRESS GOES HERE>:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: "0"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
        # Mounting Persistence Storage
        # volumeMounts:
        #   - mountPath: /var/kafka
        #     name: kafka-broker-storage
      hostname: kafka
      restartPolicy: Always
      # Getting Persistence Storage Claim
      # volumes:
      # - name: kafka-broker-storage
      #   persistentVolumeClaim:
      #     claimName: kafka-pv-claim