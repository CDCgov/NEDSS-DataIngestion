name: Build and push data-ingestion-service images to ECR
on:
  push:
    branches:
      - main
      - master
      - rel-**
    paths:
      - "data-ingestion-service/**"
      - "hl7-parser/**"
      - "phdc-xsd-jaxb/**"
jobs:

  #      - name: Read version from build.gradle and extract suffix
#        id: parse
#        run: |
#          version_line=$(grep "^version" ./data-ingestion-service/build.gradle)
#          version=$(echo "$version_line" | sed -E "s/version *= *['\"]([^'\"]+)['\"]/\1/")
#          echo "Full version: $version"
#
#          # Default value
#          image_tag="SNAPSHOT"
#
#          # Match SNAPSHOT-123
#          if [[ "$version" =~ SNAPSHOT-([0-9]+) ]]; then
#            image_tag="SNAPSHOT-${BASH_REMATCH[1]}"
#          elif [[ "$version" =~ SNAPSHOT ]]; then
#            image_tag="SNAPSHOT"
#          fi
#
#          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
  sonar_scan:
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/sonar.yaml
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      PASSED_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}

  extract-version-suffix:
    needs: sonar_scan
    name: Extract image tag from version
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.parse.outputs.image_tag }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read version from build.gradle and extract suffix
        id: parse
        run: |
          version_line=$(grep "^version" ./data-ingestion-service/build.gradle)
          version=$(echo "$version_line" | sed -E "s/version *= *['\"]([^'\"]+)['\"]/\1/")
          echo "Full version: $version"

          # Sanitize version for Docker tag compatibility (optional: replace + or other symbols)
          image_tag="${version//+/_}"

          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
          echo "Final image tag for build: $image_tag"

  call-build-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Container
    needs: extract-version-suffix
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-ingestion-service
      dockerfile_relative_path: -f ./data-ingestion-service/Dockerfile .
      environment_classifier: ${{ needs.extract-version-suffix.outputs.image_tag }}
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-data-ingestion:
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    name: Request DEV deployment
    needs: call-build-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: data-ingestion-service
      values_file_with_path: charts/dataingestion-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
