plugins {
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
group = 'gov.cdc.dataingestion'
repositories {
    mavenCentral()
}

configurations {
    xmlbeans
}

dependencies {
    xmlbeans 'org.apache.xmlbeans:xmlbeans:3.1.0'
    implementation 'org.apache.xmlbeans:xmlbeans:3.1.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir "${buildDir}/generated-src"
        }
    }
}

task generateXmlBeans(type: JavaExec) {
    doFirst {
        mkdir "${buildDir}/libs"
    }
    mainClass = "org.apache.xmlbeans.impl.tool.SchemaCompiler"
    classpath = configurations.xmlbeans
    args "-out", "${buildDir}/libs/cda-schema.jar"
    args "-src", "${buildDir}/generated-src"
    args "src/main/resources/xsd/cda/config.xsdconfig"
    args "src/main/resources/xsd/cda/CDA_SDTC.xsd"
    args "-javasource", "21"

}

compileJava.dependsOn generateXmlBeans

// Disable the default jar task
jar.enabled = false
task cdaSchemaJar(type: Jar) {
    from "${buildDir}/classes/java/main"
    archiveBaseName = "cda-schema"
}


artifacts {
    archives cdaSchemaJar
}

task copyJar(type: Copy) {
  from "${buildDir}/libs/cda-schema.jar"
  into "${project(':data-ingestion-service').projectDir}/libs/"
}

task addSuppressWarnings {
    dependsOn generateXmlBeans

    doLast {
        FileTree tree = fileTree(dir: "${buildDir}/generated-src")
        tree.each { file ->
            if (file.name.endsWith(".java")) {
                String content = file.getText()
                if (!content.contains("@SuppressWarnings")) {
                    content = content.replace("public class", "@SuppressWarnings(\"all\")\npublic class")
                    content = content.replace("public interface", "@SuppressWarnings(\"all\")\npublic interface")
                    file.setText(content)
                }
            }
        }
    }
}

cdaSchemaJar.mustRunAfter compileJava
copyJar.dependsOn(generateXmlBeans)
generateXmlBeans.finalizedBy(copyJar)
generateXmlBeans.finalizedBy(addSuppressWarnings)
