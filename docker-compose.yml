services:
  data-ingestion-service:
    build:
      context: ./
      dockerfile: ./data-ingestion-service/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      broker:
        condition: service_started
      di-keycloak:
        condition: service_started
      di-mssql:
        condition: service_healthy
    container_name: data-ingestion-service
    env_file:
      - dataingestion.env
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: broker:29092
    networks:
      - dataingestion

  srte-data-service:
    build:
      context: .
      dockerfile: ./srte-data-service/Dockerfile
    ports:
      - 8084:8084
    depends_on:
      di-keycloak:
        condition: service_started
      di-mssql:
        condition: service_healthy
    container_name: srte-data-service
    env_file:
       - dataingestion.env
    networks:
      - dataingestion

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dataingestion

  broker:
    image: confluentinc/cp-kafka:7.3.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: 'INTERNAL://broker:29092,EXTERNAL://broker:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    networks:
      - dataingestion
  
  di-mssql:
    build: 
      context: ./containers/db
      args:
        - DATABASE_PASSWORD=${NBS_DBPASSWORD:-fake.fake.fake.1234}
    container_name: di-mssql
    ports:
      - 2433:1433
    networks:
      - dataingestion
    healthcheck:
      test: timeout 1 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/1433'
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  di-keycloak:
    container_name: di-keycloak
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8100:8080"
    volumes:
      - ./containers/keycloak/imports:/opt/keycloak/data/import
    env_file:
      - dataingestion.env
    entrypoint: "/opt/keycloak/bin/kc.sh start-dev --import-realm"
    networks:
      - dataingestion

  di-wildfly:
    build: ./containers/nbs-classic
    image: nbs-classic:6.0.16
    container_name: di-wildfly
    depends_on:
      di-mssql:
        condition: service_healthy
    ports:
      - "9991:9990"
      - "7002:7001"
      - "8788:8787"
    networks:
      - dataingestion
  record-linker:
    build: ./containers/record-linker
    container_name: record-linker
    ports:
     - "8080:8080"
    environment:
      DB_URI: "mssql+pyodbc://sa:fake.fake.fake.1234@di-mssql:1433/mpi?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes"
      USE_MSSQL: true
    networks:
      - dataingestion

networks:
  dataingestion:
    name: dataingestion
    driver: bridge
