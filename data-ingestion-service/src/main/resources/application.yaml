server:
  port: 8081
  servlet:
    context-path: /ingestion

management:
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true

spring:
  application:
    name: data-ingestion-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${DI_AUTH_URI}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

auth:
  token-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token
  introspect-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token/introspect

---
spring:
  config:
    activate:
      on-profile: default
  datasource:
    username: ${NBS_DBUSER}
    password: ${NBS_DBPASSWORD}
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 10
    dataingest:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=NBS_DATAINGEST;encrypt=true;trustServerCertificate=true;
    msgoute:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=NBS_MSGOUTE;encrypt=true;trustServerCertificate=true;
    odse:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=NBS_ODSE;encrypt=true;trustServerCertificate=true;
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:9092}
    group-id: data-ingestion-group
    consumer:
      maxPollIntervalMs: 30000

kafka:
  consumer:
    max-retry: 2
  raw:
    producer:
      topic: elr_raw
    topic: elr_raw
    xml-topic: elr_raw_xml
  validation:
    topic: elr_validated
  fhir-conversion:
    topic: fhir_converted
  fhir-conversion-prep:
    topic: fhir_prep
  xml-conversion:
    topic: xml_converted
  xml-conversion-prep:
    topic: xml_prep
  elr-duplicate:
    topic: elr_duplicate
  topics: elr_raw,elr_validated
  retry:
    suffix: _retry
  dlt:
    suffix: _dlt

security:
  protocol: SASL_SSL
sasl:
  mechanism: AWS_MSK_IAM
  jaas:
    config: software.amazon.msk.auth.iam.IAMLoginModule required;
  client:
    callback.handler.class: software.amazon.msk.auth.iam.IAMClientCallbackHandler
---
sftp:
  enabled: ${DI_SFTP_ENABLED:disabled}
  host: ${DI_SFTP_HOST:dummyhost}
  username: ${DI_SFTP_USER:dummyuser}
  password: ${DI_SFTP_PWD:dummypwd}

diserver:
  host: ${DI_SERVER_HOST:localhost:8081}


service:
  timezone: ${SERVICE_TZ:UTC}