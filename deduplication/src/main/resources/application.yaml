server:
  port: 8083
  servlet:
    context-path: /nbs/api/deduplication

spring:
  application.name: deduplication
  jackson.serialization.indent-output: true
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always
  jpa:
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC
        timezone:
          default_storage: NORMALIZE
  datasource:
    deduplication:
      url: ${DEDUPLICATION_DB_URL}
      username: ${DEDUPLICATION_DB_USERNAME}
      password: ${DEDUPLICATION_DB_PASSWORD}
    nbs:
      url: ${NBS_DB_URL}
      username: ${NBS_DB_USERNAME}
      password: ${NBS_DB_PASSWORD}
    mpi:
      url: ${MPI_DB_URL}
      username: ${MPI_DB_USERNAME}
      password: ${MPI_DB_PASSWORD}

  main:
    allow-circular-references: true

deduplication:
  # url for Record Linker API
  recordLinker:
    url: ${RECORD_LINKER_URL:http://localhost:8062}
  algorithm:
    # should data elements and algorithm updates be pushed to Record Linker API
    updateRecordLinker: ${ALGORITHM_UPDATE_RL:false}
  sync:
    enabled: ${SYNC_ENABLED:false}

batch:
  chunk:
    size:
      readNbsWriteToMpi: 100
      readMpiWriteDeduplication: 1000
      deduplicationStep: 100
  job:
    schedule:
      cron: "0 0 1 * * ?" # run daily at 1 AM

kafka:
  topics:
    person: test.NBS_ODSE.dbo.Person
    person_name: test.NBS_ODSE.dbo.Person_name
    person_race: test.NBS_ODSE.dbo.Person_race
    entity_id: test.NBS_ODSE.dbo.Entity_id
    tele_locator: test.NBS_ODSE.dbo.Tele_locator
    postal_locator: test.NBS_ODSE.dbo.Postal_locator
