buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
	}
}

plugins {
	id 'java'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'gov.cdc.dataingestion.phdc-xsd-jaxb'
version = '0.0.1-SNAPSHOT'

tasks.withType(Jar).all { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

configurations {
	jaxb
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

task jaxb {
	System.setProperty('javax.xml.accessExternalSchema', 'all')
	def jaxbTargetDir = file("src/main/java")
	doLast {
		jaxbTargetDir.mkdirs()
		ant.taskdef(
				name: 'xjc',
				classname: 'com.sun.tools.xjc.XJCTask',
				classpath: configurations.jaxb.asPath
		)
		ant.jaxbTargetDir = jaxbTargetDir
		ant.xjc(
				destdir: '${jaxbTargetDir}',
				package: 'gov.cdc.dataingestion.nbs.jaxb',
				schema: 'src/main/resources/xsd/PHDC.xsd'
		)
	}
}

compileJava.dependsOn jaxb

dependencies {
	// Below is needed to compile jaxb generated code
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

	// Below is needed for runtime with jaxb generated code
	runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

	// Only need below two dependencies for java code generation from xsd file(s)
	jaxb 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
	jaxb 'org.glassfish.jaxb:jaxb-xjc:4.0.2'
}

test {
	useJUnitPlatform()
}

jar {
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
