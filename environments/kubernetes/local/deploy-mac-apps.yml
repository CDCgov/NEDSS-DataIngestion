# 
# 	Script to deploy applications
# 

apiVersion: v1
kind: Namespace
metadata:
  name: k8-di-apps

---

apiVersion: v1

kind: ConfigMap
metadata:
  name: jwtgenerator-config
data:
  jwt_secret_for_algorithm: "once upon a time there lived a king, he wanted to build stairway to moon, i wonder is that possible?"
  jwt_claim_name: "Enquizit Inc"
  jwt_claim_email: "nbsmoderization@enquizit.com"
  jwt_claim_subject: "NBS Mederization"
  jwt_seed: "monroe"

---

apiVersion: v1

kind: ConfigMap
metadata:
  name: phinadapter-config
data:
  odsedb_url: "jdbc:sqlserver://nbs-msgoute-20221213.cyyst6dg82wr.us-east-1.rds.amazonaws.com:1433;databaseName=nbs_odse_20211119"
  odsedb_username: "admin"
  odsedb_password: "7CQqXR3sCJuNfC8"
  jwt_enabled: "true"
  jwt_endpoint: "http://jwtgenerator:8000/jwt/v1/verify"
  jwt_seed: "monroe"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: jwtgenerator
  name: jwtgenerator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jwtgenerator
  template:
    metadata:
      labels:
        app: jwtgenerator
    spec:
      containers:
      - name: jwtgenerator
        image: raddanki64/eqartifacts:jwtgenerator
        imagePullPolicy: Always
        ports:
          - containerPort: 8000
        env:
          - name: HASHIVAULT_ENABLED
            value: "false"
          - name: JWT_SECRETFORALGORITHM
            valueFrom:
              configMapKeyRef:
                name: jwtgenerator-config
                key: jwt_secret_for_algorithm
          - name: JWT_CLAIMNAME
            valueFrom:
              configMapKeyRef:
                name: jwtgenerator-config
                key: jwt_claim_name
          - name: JWT_CLAIMEMAIL
            valueFrom:
              configMapKeyRef:
                name: jwtgenerator-config
                key: jwt_claim_email
          - name: JWT_CLAIMSUBJECT
            valueFrom:
              configMapKeyRef:
                name: jwtgenerator-config
                key: jwt_claim_subject
          - name: JWT_SEED
            valueFrom:
              configMapKeyRef:
                name: jwtgenerator-config
                key: jwt_seed

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: phinadapter
  name: phinadapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phinadapter
  template:
    metadata:
      labels:
        app: phinadapter
    spec:
      containers:
      - name: phinadapter
        imagePullPolicy: IfNotPresent
        image: raddanki64/eqartifacts:phinadapter
        ports:
          - containerPort: 8090
        env:
          - name: HASHIVAULT_ENABLED
            value: "false"
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: odsedb_url
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: odsedb_username
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: odsedb_password
          - name: JWT_ENABLED
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: jwt_enabled
          - name: JWT_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: jwt_endpoint
          - name: JWT_SEED
            valueFrom:
              configMapKeyRef:
                name: phinadapter-config
                key: jwt_seed

---

apiVersion: v1
kind: Service
metadata:
  name: jwtgenerator
spec:
  type: LoadBalancer
  selector:
    app: jwtgenerator
  ports:
    - port: 8000
      targetPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: phinadapter
spec:
  type: LoadBalancer
  selector:
    app: phinadapter
  ports:
    - port: 8090
      targetPort: 8090

