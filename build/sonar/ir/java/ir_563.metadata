gov.cdc.dataingestion.security.service.TokenService#generateToken(Lorg/springframework/security/core/Authentication;)Ljava/lang/String;
java.time.Instant#plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/Instant;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#issuedAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#build()Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#subject(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#expiresAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#issuer(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
org.springframework.security.oauth2.jwt.JwtClaimsSet#builder()Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
org.springframework.security.oauth2.jwt.JwtClaimsSet$Builder#claim(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
java.time.Instant#now()Ljava/time/Instant;
java.util.stream.Collectors#joining(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
org.springframework.security.oauth2.jwt.JwtEncoderParameters#from(Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;)Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;
==
encode org.springframework.security.oauth2.jwt.JwtEncoder#encode(Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;)Lorg/springframework/security/oauth2/jwt/Jwt;
getTokenValue org.springframework.security.oauth2.core.AbstractOAuth2Token#getTokenValue()Ljava/lang/String;
collect java.util.stream.Stream#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
getAuthorities org.springframework.security.core.Authentication#getAuthorities()Ljava/util/Collection;
stream java.util.Collection#stream()Ljava/util/stream/Stream;
map java.util.stream.Stream#map(Ljava/util/function/Function;)Ljava/util/stream/Stream;
getName java.security.Principal#getName()Ljava/lang/String;