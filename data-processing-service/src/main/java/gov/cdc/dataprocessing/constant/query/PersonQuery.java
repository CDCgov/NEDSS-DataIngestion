package gov.cdc.dataprocessing.constant.query;

public class PersonQuery {
    public static final String INSERT_SQL_PERSON = """
    INSERT INTO Person (
        person_uid, version_ctrl_nbr, add_reason_cd, add_time, add_user_id,
        administrative_gender_cd, age_calc, age_calc_time, age_calc_unit_cd, age_category_cd,
        age_reported, age_reported_time, age_reported_unit_cd, birth_gender_cd, birth_order_nbr,
        birth_time, birth_time_calc, cd, cd_desc_txt, curr_sex_cd, deceased_ind_cd, deceased_time,
        description, education_level_cd, education_level_desc_txt, ethnic_group_ind,
        last_chg_reason_cd, last_chg_time, last_chg_user_id, local_id, marital_status_cd,
        marital_status_desc_txt, mothers_maiden_nm, multiple_birth_ind, occupation_cd,
        preferred_gender_cd, prim_lang_cd, prim_lang_desc_txt, record_status_cd,
        record_status_time, status_cd, status_time, survived_ind_cd, user_affiliation_txt,
        first_nm, last_nm, middle_nm, nm_prefix, nm_suffix, preferred_nm, hm_street_addr1,
        hm_street_addr2, hm_city_cd, hm_city_desc_txt, hm_state_cd, hm_zip_cd, hm_cnty_cd,
        hm_cntry_cd, hm_phone_nbr, hm_phone_cntry_cd, hm_email_addr, cell_phone_nbr,
        wk_street_addr1, wk_street_addr2, wk_city_cd, wk_city_desc_txt, wk_state_cd, wk_zip_cd,
        wk_cnty_cd, wk_cntry_cd, wk_phone_nbr, wk_phone_cntry_cd, wk_email_addr, SSN,
        medicaid_num, dl_num, dl_state_cd, race_cd, race_seq_nbr, race_category_cd,
        ethnicity_group_cd, ethnic_group_seq_nbr, adults_in_house_nbr, children_in_house_nbr,
        birth_city_cd, birth_city_desc_txt, birth_cntry_cd, birth_state_cd, race_desc_txt,
        ethnic_group_desc_txt, as_of_date_admin, as_of_date_ethnicity, as_of_date_general,
        as_of_date_morbidity, as_of_date_sex, electronic_ind, person_parent_uid, dedup_match_ind,
        group_nbr, group_time, edx_ind, speaks_english_cd, additional_gender_cd, ehars_id,
        ethnic_unk_reason_cd, sex_unk_reason_cd
    ) VALUES (
        :person_uid, :version_ctrl_nbr, :add_reason_cd, :add_time, :add_user_id,
        :administrative_gender_cd, :age_calc, :age_calc_time, :age_calc_unit_cd, :age_category_cd,
        :age_reported, :age_reported_time, :age_reported_unit_cd, :birth_gender_cd, :birth_order_nbr,
        :birth_time, :birth_time_calc, :cd, :cd_desc_txt, :curr_sex_cd, :deceased_ind_cd, :deceased_time,
        :description, :education_level_cd, :education_level_desc_txt, :ethnic_group_ind,
        :last_chg_reason_cd, :last_chg_time, :last_chg_user_id, :local_id, :marital_status_cd,
        :marital_status_desc_txt, :mothers_maiden_nm, :multiple_birth_ind, :occupation_cd,
        :preferred_gender_cd, :prim_lang_cd, :prim_lang_desc_txt, :record_status_cd,
        :record_status_time, :status_cd, :status_time, :survived_ind_cd, :user_affiliation_txt,
        :first_nm, :last_nm, :middle_nm, :nm_prefix, :nm_suffix, :preferred_nm, :hm_street_addr1,
        :hm_street_addr2, :hm_city_cd, :hm_city_desc_txt, :hm_state_cd, :hm_zip_cd, :hm_cnty_cd,
        :hm_cntry_cd, :hm_phone_nbr, :hm_phone_cntry_cd, :hm_email_addr, :cell_phone_nbr,
        :wk_street_addr1, :wk_street_addr2, :wk_city_cd, :wk_city_desc_txt, :wk_state_cd, :wk_zip_cd,
        :wk_cnty_cd, :wk_cntry_cd, :wk_phone_nbr, :wk_phone_cntry_cd, :wk_email_addr, :SSN,
        :medicaid_num, :dl_num, :dl_state_cd, :race_cd, :race_seq_nbr, :race_category_cd,
        :ethnicity_group_cd, :ethnic_group_seq_nbr, :adults_in_house_nbr, :children_in_house_nbr,
        :birth_city_cd, :birth_city_desc_txt, :birth_cntry_cd, :birth_state_cd, :race_desc_txt,
        :ethnic_group_desc_txt, :as_of_date_admin, :as_of_date_ethnicity, :as_of_date_general,
        :as_of_date_morbidity, :as_of_date_sex, :electronic_ind, :person_parent_uid, :dedup_match_ind,
        :group_nbr, :group_time, :edx_ind, :speaks_english_cd, :additional_gender_cd, :ehars_id,
        :ethnic_unk_reason_cd, :sex_unk_reason_cd
    )
""";

    public static final String INSERT_SQL_PERSON_NAME = """
INSERT INTO Person_name (
    person_uid, person_name_seq, add_reason_cd, add_time, add_user_id, default_nm_ind,
    duration_amt, duration_unit_cd, first_nm, first_nm_sndx, from_time, last_chg_reason_cd,
    last_chg_time, last_chg_user_id, last_nm, last_nm_sndx, last_nm2, last_nm2_sndx, middle_nm,
    middle_nm2, nm_degree, nm_prefix, nm_suffix, nm_use_cd, record_status_cd,
    record_status_time, status_cd, status_time, to_time, user_affiliation_txt, as_of_date
) VALUES (
    :person_uid, :person_name_seq, :add_reason_cd, :add_time, :add_user_id, :default_nm_ind,
    :duration_amt, :duration_unit_cd, :first_nm, :first_nm_sndx, :from_time, :last_chg_reason_cd,
    :last_chg_time, :last_chg_user_id, :last_nm, :last_nm_sndx, :last_nm2, :last_nm2_sndx, :middle_nm,
    :middle_nm2, :nm_degree, :nm_prefix, :nm_suffix, :nm_use_cd, :record_status_cd,
    :record_status_time, :status_cd, :status_time, :to_time, :user_affiliation_txt, :as_of_date
)
""";

    public static final String INSERT_SQL_PERSON_RACE = """
INSERT INTO Person_race (
    person_uid, race_cd, add_reason_cd, add_time, add_user_id,
    last_chg_reason_cd, last_chg_time, last_chg_user_id, race_category_cd,
    race_desc_txt, record_status_cd, record_status_time,
    user_affiliation_txt, as_of_date
) VALUES (
    :person_uid, :race_cd, :add_reason_cd, :add_time, :add_user_id,
    :last_chg_reason_cd, :last_chg_time, :last_chg_user_id, :race_category_cd,
    :race_desc_txt, :record_status_cd, :record_status_time,
    :user_affiliation_txt, :as_of_date
)
""";

    public static final String INSERT_SQL_PERSON_ETHNIC = """
INSERT INTO Person_ethnic_group (
    person_uid, ethnic_group_cd, add_reason_cd, add_time, add_user_id,
    ethnic_group_desc_txt, last_chg_reason_cd, last_chg_time, last_chg_user_id,
    record_status_cd, record_status_time, user_affiliation_txt
) VALUES (
    :person_uid, :ethnic_group_cd, :add_reason_cd, :add_time, :add_user_id,
    :ethnic_group_desc_txt, :last_chg_reason_cd, :last_chg_time, :last_chg_user_id,
    :record_status_cd, :record_status_time, :user_affiliation_txt
)
""";


    public static final String INSERT_SQL_ROLE = """
INSERT INTO Role (
    subject_entity_uid, cd, role_seq, add_reason_cd, add_time, add_user_id,
    cd_desc_txt, effective_duration_amt, effective_duration_unit_cd, effective_from_time,
    effective_to_time, last_chg_reason_cd, last_chg_time, last_chg_user_id,
    record_status_cd, record_status_time, scoping_class_cd, scoping_entity_uid,
    scoping_role_cd, scoping_role_seq, status_cd, status_time, subject_class_cd, user_affiliation_txt
) VALUES (
    :subject_entity_uid, :cd, :role_seq, :add_reason_cd, :add_time, :add_user_id,
    :cd_desc_txt, :effective_duration_amt, :effective_duration_unit_cd, :effective_from_time,
    :effective_to_time, :last_chg_reason_cd, :last_chg_time, :last_chg_user_id,
    :record_status_cd, :record_status_time, :scoping_class_cd, :scoping_entity_uid,
    :scoping_role_cd, :scoping_role_seq, :status_cd, :status_time, :subject_class_cd, :user_affiliation_txt
)
""";

    public static final String SELECT_ROLE_BY_SUBJECT_ENTITY_UID = """
            SELECT
                subject_entity_uid AS subjectEntityUid,
                cd AS code,
                role_seq AS roleSeq,
                add_reason_cd AS addReasonCode,
                add_time AS addTime,
                add_user_id AS addUserId,
                cd_desc_txt AS codeDescription,
                effective_duration_amt AS effectiveDurationAmount,
                effective_duration_unit_cd AS effectiveDurationUnitCode,
                effective_from_time AS effectiveFromTime,
                effective_to_time AS effectiveToTime,
                last_chg_reason_cd AS lastChangeReasonCode,
                last_chg_time AS lastChangeTime,
                last_chg_user_id AS lastChangeUserId,
                record_status_cd AS recordStatusCode,
                record_status_time AS recordStatusTime,
                scoping_class_cd AS scopingClassCode,
                scoping_entity_uid AS scopingEntityUid,
                scoping_role_cd AS scopingRoleCode,
                scoping_role_seq AS scopingRoleSeq,
                status_cd AS statusCode,
                status_time AS statusTime,
                subject_class_cd AS subjectClassCode,
                user_affiliation_txt AS userAffiliationText
            FROM Role
            WHERE subject_entity_uid = :subject_entity_uid
            
            """;

    public static final String SELECT_PERSON_BY_PARENT_UID =  """
        SELECT
            person_uid AS personUid,
            version_ctrl_nbr AS versionCtrlNbr,
            add_reason_cd AS addReasonCd,
            add_time AS addTime,
            add_user_id AS addUserId,
            administrative_gender_cd AS administrativeGenderCd,
            age_calc AS ageCalc,
            age_calc_time AS ageCalcTime,
            age_calc_unit_cd AS ageCalcUnitCd,
            age_category_cd AS ageCategoryCd,
            age_reported AS ageReported,
            age_reported_time AS ageReportedTime,
            age_reported_unit_cd AS ageReportedUnitCd,
            birth_gender_cd AS birthGenderCd,
            birth_order_nbr AS birthOrderNbr,
            birth_time AS birthTime,
            birth_time_calc AS birthTimeCalc,
            cd AS cd,
            cd_desc_txt AS cdDescTxt,
            curr_sex_cd AS currSexCd,
            deceased_ind_cd AS deceasedIndCd,
            deceased_time AS deceasedTime,
            description AS description,
            education_level_cd AS educationLevelCd,
            education_level_desc_txt AS educationLevelDescTxt,
            ethnic_group_ind AS ethnicGroupInd,
            last_chg_reason_cd AS lastChgReasonCd,
            last_chg_time AS lastChgTime,
            last_chg_user_id AS lastChgUserId,
            local_id AS localId,
            marital_status_cd AS maritalStatusCd,
            marital_status_desc_txt AS maritalStatusDescTxt,
            mothers_maiden_nm AS mothersMaidenNm,
            multiple_birth_ind AS multipleBirthInd,
            occupation_cd AS occupationCd,
            preferred_gender_cd AS preferredGenderCd,
            prim_lang_cd AS primLangCd,
            prim_lang_desc_txt AS primLangDescTxt,
            record_status_cd AS recordStatusCd,
            record_status_time AS recordStatusTime,
            status_cd AS statusCd,
            status_time AS statusTime,
            survived_ind_cd AS survivedIndCd,
            user_affiliation_txt AS userAffiliationTxt,
            first_nm AS firstNm,
            last_nm AS lastNm,
            middle_nm AS middleNm,
            nm_prefix AS nmPrefix,
            nm_suffix AS nmSuffix,
            preferred_nm AS preferredNm,
            hm_street_addr1 AS hmStreetAddr1,
            hm_street_addr2 AS hmStreetAddr2,
            hm_city_cd AS hmCityCd,
            hm_city_desc_txt AS hmCityDescTxt,
            hm_state_cd AS hmStateCd,
            hm_zip_cd AS hmZipCd,
            hm_cnty_cd AS hmCntyCd,
            hm_cntry_cd AS hmCntryCd,
            hm_phone_nbr AS hmPhoneNbr,
            hm_phone_cntry_cd AS hmPhoneCntryCd,
            hm_email_addr AS hmEmailAddr,
            cell_phone_nbr AS cellPhoneNbr,
            wk_street_addr1 AS wkStreetAddr1,
            wk_street_addr2 AS wkStreetAddr2,
            wk_city_cd AS wkCityCd,
            wk_city_desc_txt AS wkCityDescTxt,
            wk_state_cd AS wkStateCd,
            wk_zip_cd AS wkZipCd,
            wk_cnty_cd AS wkCntyCd,
            wk_cntry_cd AS wkCntryCd,
            wk_phone_nbr AS wkPhoneNbr,
            wk_phone_cntry_cd AS wkPhoneCntryCd,
            wk_email_addr AS wkEmailAddr,
            SSN AS ssn,
            medicaid_num AS medicaidNum,
            dl_num AS dlNum,
            dl_state_cd AS dlStateCd,
            race_cd AS raceCd,
            race_seq_nbr AS raceSeqNbr,
            race_category_cd AS raceCategoryCd,
            ethnicity_group_cd AS ethnicityGroupCd,
            ethnic_group_seq_nbr AS ethnicGroupSeqNbr,
            adults_in_house_nbr AS adultsInHouseNbr,
            children_in_house_nbr AS childrenInHouseNbr,
            birth_city_cd AS birthCityCd,
            birth_city_desc_txt AS birthCityDescTxt,
            birth_cntry_cd AS birthCntryCd,
            birth_state_cd AS birthStateCd,
            race_desc_txt AS raceDescTxt,
            ethnic_group_desc_txt AS ethnicGroupDescTxt,
            as_of_date_admin AS asOfDateAdmin,
            as_of_date_ethnicity AS asOfDateEthnicity,
            as_of_date_general AS asOfDateGeneral,
            as_of_date_morbidity AS asOfDateMorbidity,
            as_of_date_sex AS asOfDateSex,
            electronic_ind AS electronicInd,
            person_parent_uid AS personParentUid,
            dedup_match_ind AS dedupMatchInd,
            group_nbr AS groupNbr,
            group_time AS groupTime,
            edx_ind AS edxInd,
            speaks_english_cd AS speaksEnglishCd,
            additional_gender_cd AS additionalGenderCd,
            ehars_id AS eharsId,
            ethnic_unk_reason_cd AS ethnicUnkReasonCd,
            sex_unk_reason_cd AS sexUnkReasonCd
        FROM Person
        WHERE person_parent_uid = :person_parent_uid
    """;

    public static final String SELECT_PERSON_BY_PERSON_UID = """
        SELECT
            person_uid AS personUid,
            version_ctrl_nbr AS versionCtrlNbr,
            add_reason_cd AS addReasonCd,
            add_time AS addTime,
            add_user_id AS addUserId,
            administrative_gender_cd AS administrativeGenderCd,
            age_calc AS ageCalc,
            age_calc_time AS ageCalcTime,
            age_calc_unit_cd AS ageCalcUnitCd,
            age_category_cd AS ageCategoryCd,
            age_reported AS ageReported,
            age_reported_time AS ageReportedTime,
            age_reported_unit_cd AS ageReportedUnitCd,
            birth_gender_cd AS birthGenderCd,
            birth_order_nbr AS birthOrderNbr,
            birth_time AS birthTime,
            birth_time_calc AS birthTimeCalc,
            cd AS cd,
            cd_desc_txt AS cdDescTxt,
            curr_sex_cd AS currSexCd,
            deceased_ind_cd AS deceasedIndCd,
            deceased_time AS deceasedTime,
            description AS description,
            education_level_cd AS educationLevelCd,
            education_level_desc_txt AS educationLevelDescTxt,
            ethnic_group_ind AS ethnicGroupInd,
            last_chg_reason_cd AS lastChgReasonCd,
            last_chg_time AS lastChgTime,
            last_chg_user_id AS lastChgUserId,
            local_id AS localId,
            marital_status_cd AS maritalStatusCd,
            marital_status_desc_txt AS maritalStatusDescTxt,
            mothers_maiden_nm AS mothersMaidenNm,
            multiple_birth_ind AS multipleBirthInd,
            occupation_cd AS occupationCd,
            preferred_gender_cd AS preferredGenderCd,
            prim_lang_cd AS primLangCd,
            prim_lang_desc_txt AS primLangDescTxt,
            record_status_cd AS recordStatusCd,
            record_status_time AS recordStatusTime,
            status_cd AS statusCd,
            status_time AS statusTime,
            survived_ind_cd AS survivedIndCd,
            user_affiliation_txt AS userAffiliationTxt,
            first_nm AS firstNm,
            last_nm AS lastNm,
            middle_nm AS middleNm,
            nm_prefix AS nmPrefix,
            nm_suffix AS nmSuffix,
            preferred_nm AS preferredNm,
            hm_street_addr1 AS hmStreetAddr1,
            hm_street_addr2 AS hmStreetAddr2,
            hm_city_cd AS hmCityCd,
            hm_city_desc_txt AS hmCityDescTxt,
            hm_state_cd AS hmStateCd,
            hm_zip_cd AS hmZipCd,
            hm_cnty_cd AS hmCntyCd,
            hm_cntry_cd AS hmCntryCd,
            hm_phone_nbr AS hmPhoneNbr,
            hm_phone_cntry_cd AS hmPhoneCntryCd,
            hm_email_addr AS hmEmailAddr,
            cell_phone_nbr AS cellPhoneNbr,
            wk_street_addr1 AS wkStreetAddr1,
            wk_street_addr2 AS wkStreetAddr2,
            wk_city_cd AS wkCityCd,
            wk_city_desc_txt AS wkCityDescTxt,
            wk_state_cd AS wkStateCd,
            wk_zip_cd AS wkZipCd,
            wk_cnty_cd AS wkCntyCd,
            wk_cntry_cd AS wkCntryCd,
            wk_phone_nbr AS wkPhoneNbr,
            wk_phone_cntry_cd AS wkPhoneCntryCd,
            wk_email_addr AS wkEmailAddr,
            SSN AS ssn,
            medicaid_num AS medicaidNum,
            dl_num AS dlNum,
            dl_state_cd AS dlStateCd,
            race_cd AS raceCd,
            race_seq_nbr AS raceSeqNbr,
            race_category_cd AS raceCategoryCd,
            ethnicity_group_cd AS ethnicityGroupCd,
            ethnic_group_seq_nbr AS ethnicGroupSeqNbr,
            adults_in_house_nbr AS adultsInHouseNbr,
            children_in_house_nbr AS childrenInHouseNbr,
            birth_city_cd AS birthCityCd,
            birth_city_desc_txt AS birthCityDescTxt,
            birth_cntry_cd AS birthCntryCd,
            birth_state_cd AS birthStateCd,
            race_desc_txt AS raceDescTxt,
            ethnic_group_desc_txt AS ethnicGroupDescTxt,
            as_of_date_admin AS asOfDateAdmin,
            as_of_date_ethnicity AS asOfDateEthnicity,
            as_of_date_general AS asOfDateGeneral,
            as_of_date_morbidity AS asOfDateMorbidity,
            as_of_date_sex AS asOfDateSex,
            electronic_ind AS electronicInd,
            person_parent_uid AS personParentUid,
            dedup_match_ind AS dedupMatchInd,
            group_nbr AS groupNbr,
            group_time AS groupTime,
            edx_ind AS edxInd,
            speaks_english_cd AS speaksEnglishCd,
            additional_gender_cd AS additionalGenderCd,
            ehars_id AS eharsId,
            ethnic_unk_reason_cd AS ethnicUnkReasonCd,
            sex_unk_reason_cd AS sexUnkReasonCd
        FROM Person
        WHERE person_uid = :person_uid
    """;

    public static final String SELECT_PERSON_NAME_BY_PERSON_UID = """
        SELECT
            person_uid AS personUid,
            person_name_seq AS personNameSeq,
            add_reason_cd AS addReasonCd,
            add_time AS addTime,
            add_user_id AS addUserId,
            default_nm_ind AS defaultNmInd,
            duration_amt AS durationAmt,
            duration_unit_cd AS durationUnitCd,
            first_nm AS firstNm,
            first_nm_sndx AS firstNmSndx,
            from_time AS fromTime,
            last_chg_reason_cd AS lastChgReasonCd,
            last_chg_time AS lastChgTime,
            last_chg_user_id AS lastChgUserId,
            last_nm AS lastNm,
            last_nm_sndx AS lastNmSndx,
            last_nm2 AS lastNm2,
            last_nm2_sndx AS lastNm2Sndx,
            middle_nm AS middleNm,
            middle_nm2 AS middleNm2,
            nm_degree AS nmDegree,
            nm_prefix AS nmPrefix,
            nm_suffix AS nmSuffix,
            nm_use_cd AS nmUseCd,
            record_status_cd AS recordStatusCd,
            record_status_time AS recordStatusTime,
            status_cd AS statusCd,
            status_time AS statusTime,
            to_time AS toTime,
            user_affiliation_txt AS userAffiliationTxt,
            as_of_date AS asOfDate
        FROM Person_name
        WHERE person_uid = :person_uid
    """;

    public static final String SELECT_PERSON_RACE_BY_PERSON_UID = """
        SELECT
            person_uid AS personUid,
            race_cd AS raceCd,
            add_reason_cd AS addReasonCd,
            add_time AS addTime,
            add_user_id AS addUserId,
            last_chg_reason_cd AS lastChgReasonCd,
            last_chg_time AS lastChgTime,
            last_chg_user_id AS lastChgUserId,
            race_category_cd AS raceCategoryCd,
            race_desc_txt AS raceDescTxt,
            record_status_cd AS recordStatusCd,
            record_status_time AS recordStatusTime,
            user_affiliation_txt AS userAffiliationTxt,
            as_of_date AS asOfDate
        FROM Person_race
        WHERE person_uid = :person_uid
    """;

    public static final String SELECT_PERSON_ETHNIC_BY_PERSON_UID = """
        SELECT
            person_uid AS personUid,
            ethnic_group_cd AS ethnicGroupCd,
            add_reason_cd AS addReasonCd,
            add_time AS addTime,
            add_user_id AS addUserId,
            ethnic_group_desc_txt AS ethnicGroupDescTxt,
            last_chg_reason_cd AS lastChgReasonCd,
            last_chg_time AS lastChgTime,
            last_chg_user_id AS lastChgUserId,
            record_status_cd AS recordStatusCd,
            record_status_time AS recordStatusTime,
            user_affiliation_txt AS userAffiliationTxt
        FROM Person_ethnic_group
        WHERE person_uid = :person_uid
    """;

    public static final String UPDATE_ROLE_BY_UID_AND_SEQ = """
UPDATE Role SET
    cd = :code,
    add_reason_cd = :addReasonCode,
    add_time = :addTime,
    add_user_id = :addUserId,
    cd_desc_txt = :codeDescription,
    effective_duration_amt = :effectiveDurationAmount,
    effective_duration_unit_cd = :effectiveDurationUnitCode,
    effective_from_time = :effectiveFromTime,
    effective_to_time = :effectiveToTime,
    last_chg_reason_cd = :lastChangeReasonCode,
    last_chg_time = :lastChangeTime,
    last_chg_user_id = :lastChangeUserId,
    record_status_cd = :recordStatusCode,
    record_status_time = :recordStatusTime,
    scoping_class_cd = :scopingClassCode,
    scoping_entity_uid = :scopingEntityUid,
    scoping_role_cd = :scopingRoleCode,
    scoping_role_seq = :scopingRoleSeq,
    status_cd = :statusCode,
    status_time = :statusTime,
    subject_class_cd = :subjectClassCode,
    user_affiliation_txt = :userAffiliationText
WHERE subject_entity_uid = :subjectEntityUid AND role_seq = :roleSeq
""";

    public static final String SELECT_ACTIVE_ROLES_BY_ENTITY_UID = """
SELECT
    subject_entity_uid      AS subjectEntityUid,
    cd                      AS code,
    role_seq                AS roleSeq,
    add_reason_cd           AS addReasonCode,
    add_time                AS addTime,
    add_user_id             AS addUserId,
    cd_desc_txt             AS codeDescription,
    effective_duration_amt  AS effectiveDurationAmount,
    effective_duration_unit_cd AS effectiveDurationUnitCode,
    effective_from_time     AS effectiveFromTime,
    effective_to_time       AS effectiveToTime,
    last_chg_reason_cd      AS lastChangeReasonCode,
    last_chg_time           AS lastChangeTime,
    last_chg_user_id        AS lastChangeUserId,
    record_status_cd        AS recordStatusCode,
    record_status_time      AS recordStatusTime,
    scoping_class_cd        AS scopingClassCode,
    scoping_entity_uid      AS scopingEntityUid,
    scoping_role_cd         AS scopingRoleCode,
    scoping_role_seq        AS scopingRoleSeq,
    status_cd               AS statusCode,
    status_time             AS statusTime,
    subject_class_cd        AS subjectClassCode,
    user_affiliation_txt    AS userAffiliationText
FROM Role
WHERE subject_entity_uid = :subjectEntityUid AND status_cd = 'A'
""";

    public static final String UPDATE_PERSON = """
            UPDATE Person
            SET
                version_ctrl_nbr = :version_ctrl_nbr,
                add_reason_cd = :add_reason_cd,
                add_time = :add_time,
                add_user_id = :add_user_id,
                administrative_gender_cd = :administrative_gender_cd,
                age_calc = :age_calc,
                age_calc_time = :age_calc_time,
                age_calc_unit_cd = :age_calc_unit_cd,
                age_category_cd = :age_category_cd,
                age_reported = :age_reported,
                age_reported_time = :age_reported_time,
                age_reported_unit_cd = :age_reported_unit_cd,
                birth_gender_cd = :birth_gender_cd,
                birth_order_nbr = :birth_order_nbr,
                birth_time = :birth_time,
                birth_time_calc = :birth_time_calc,
                cd = :cd,
                cd_desc_txt = :cd_desc_txt,
                curr_sex_cd = :curr_sex_cd,
                deceased_ind_cd = :deceased_ind_cd,
                deceased_time = :deceased_time,
                description = :description,
                education_level_cd = :education_level_cd,
                education_level_desc_txt = :education_level_desc_txt,
                ethnic_group_ind = :ethnic_group_ind,
                last_chg_reason_cd = :last_chg_reason_cd,
                last_chg_time = :last_chg_time,
                last_chg_user_id = :last_chg_user_id,
                local_id = :local_id,
                marital_status_cd = :marital_status_cd,
                marital_status_desc_txt = :marital_status_desc_txt,
                mothers_maiden_nm = :mothers_maiden_nm,
                multiple_birth_ind = :multiple_birth_ind,
                occupation_cd = :occupation_cd,
                preferred_gender_cd = :preferred_gender_cd,
                prim_lang_cd = :prim_lang_cd,
                prim_lang_desc_txt = :prim_lang_desc_txt,
                record_status_cd = :record_status_cd,
                record_status_time = :record_status_time,
                status_cd = :status_cd,
                status_time = :status_time,
                survived_ind_cd = :survived_ind_cd,
                user_affiliation_txt = :user_affiliation_txt,
                first_nm = :first_nm,
                last_nm = :last_nm,
                middle_nm = :middle_nm,
                nm_prefix = :nm_prefix,
                nm_suffix = :nm_suffix,
                preferred_nm = :preferred_nm,
                hm_street_addr1 = :hm_street_addr1,
                hm_street_addr2 = :hm_street_addr2,
                hm_city_cd = :hm_city_cd,
                hm_city_desc_txt = :hm_city_desc_txt,
                hm_state_cd = :hm_state_cd,
                hm_zip_cd = :hm_zip_cd,
                hm_cnty_cd = :hm_cnty_cd,
                hm_cntry_cd = :hm_cntry_cd,
                hm_phone_nbr = :hm_phone_nbr,
                hm_phone_cntry_cd = :hm_phone_cntry_cd,
                hm_email_addr = :hm_email_addr,
                cell_phone_nbr = :cell_phone_nbr,
                wk_street_addr1 = :wk_street_addr1,
                wk_street_addr2 = :wk_street_addr2,
                wk_city_cd = :wk_city_cd,
                wk_city_desc_txt = :wk_city_desc_txt,
                wk_state_cd = :wk_state_cd,
                wk_zip_cd = :wk_zip_cd,
                wk_cnty_cd = :wk_cnty_cd,
                wk_cntry_cd = :wk_cntry_cd,
                wk_phone_nbr = :wk_phone_nbr,
                wk_phone_cntry_cd = :wk_phone_cntry_cd,
                wk_email_addr = :wk_email_addr,
                ssn = :ssn,
                medicaid_num = :medicaid_num,
                dl_num = :dl_num,
                dl_state_cd = :dl_state_cd,
                race_cd = :race_cd,
                race_seq_nbr = :race_seq_nbr,
                race_category_cd = :race_category_cd,
                ethnicity_group_cd = :ethnicity_group_cd,
                ethnic_group_seq_nbr = :ethnic_group_seq_nbr,
                adults_in_house_nbr = :adults_in_house_nbr,
                children_in_house_nbr = :children_in_house_nbr,
                birth_city_cd = :birth_city_cd,
                birth_city_desc_txt = :birth_city_desc_txt,
                birth_cntry_cd = :birth_cntry_cd,
                birth_state_cd = :birth_state_cd,
                race_desc_txt = :race_desc_txt,
                ethnic_group_desc_txt = :ethnic_group_desc_txt,
                as_of_date_admin = :as_of_date_admin,
                as_of_date_ethnicity = :as_of_date_ethnicity,
                as_of_date_general = :as_of_date_general,
                as_of_date_morbidity = :as_of_date_morbidity,
                as_of_date_sex = :as_of_date_sex,
                electronic_ind = :electronic_ind,
                person_parent_uid = :person_parent_uid,
                dedup_match_ind = :dedup_match_ind,
                group_nbr = :group_nbr,
                group_time = :group_time,
                edx_ind = :edx_ind,
                speaks_english_cd = :speaks_english_cd,
                additional_gender_cd = :additional_gender_cd,
                ehars_id = :ehars_id,
                ethnic_unk_reason_cd = :ethnic_unk_reason_cd,
                sex_unk_reason_cd = :sex_unk_reason_cd
            WHERE
                person_uid = :person_uid
            """;


    public static final String SELECT_BY_UID = """
    SELECT 
        person_uid AS personUid,
        version_ctrl_nbr AS versionCtrlNbr,
        add_reason_cd AS addReasonCd,
        add_time AS addTime,
        add_user_id AS addUserId,
        administrative_gender_cd AS administrativeGenderCd,
        age_calc AS ageCalc,
        age_calc_time AS ageCalcTime,
        age_calc_unit_cd AS ageCalcUnitCd,
        age_category_cd AS ageCategoryCd,
        age_reported AS ageReported,
        age_reported_time AS ageReportedTime,
        age_reported_unit_cd AS ageReportedUnitCd,
        birth_gender_cd AS birthGenderCd,
        birth_order_nbr AS birthOrderNbr,
        birth_time AS birthTime,
        birth_time_calc AS birthTimeCalc,
        cd AS cd,
        cd_desc_txt AS cdDescTxt,
        curr_sex_cd AS currSexCd,
        deceased_ind_cd AS deceasedIndCd,
        deceased_time AS deceasedTime,
        description AS description,
        education_level_cd AS educationLevelCd,
        education_level_desc_txt AS educationLevelDescTxt,
        ethnic_group_ind AS ethnicGroupInd,
        last_chg_reason_cd AS lastChgReasonCd,
        last_chg_time AS lastChgTime,
        last_chg_user_id AS lastChgUserId,
        local_id AS localId,
        marital_status_cd AS maritalStatusCd,
        marital_status_desc_txt AS maritalStatusDescTxt,
        mothers_maiden_nm AS mothersMaidenNm,
        multiple_birth_ind AS multipleBirthInd,
        occupation_cd AS occupationCd,
        preferred_gender_cd AS preferredGenderCd,
        prim_lang_cd AS primLangCd,
        prim_lang_desc_txt AS primLangDescTxt,
        record_status_cd AS recordStatusCd,
        record_status_time AS recordStatusTime,
        status_cd AS statusCd,
        status_time AS statusTime,
        survived_ind_cd AS survivedIndCd,
        user_affiliation_txt AS userAffiliationTxt,
        first_nm AS firstNm,
        last_nm AS lastNm,
        middle_nm AS middleNm,
        nm_prefix AS nmPrefix,
        nm_suffix AS nmSuffix,
        preferred_nm AS preferredNm,
        hm_street_addr1 AS hmStreetAddr1,
        hm_street_addr2 AS hmStreetAddr2,
        hm_city_cd AS hmCityCd,
        hm_city_desc_txt AS hmCityDescTxt,
        hm_state_cd AS hmStateCd,
        hm_zip_cd AS hmZipCd,
        hm_cnty_cd AS hmCntyCd,
        hm_cntry_cd AS hmCntryCd,
        hm_phone_nbr AS hmPhoneNbr,
        hm_phone_cntry_cd AS hmPhoneCntryCd,
        hm_email_addr AS hmEmailAddr,
        cell_phone_nbr AS cellPhoneNbr,
        wk_street_addr1 AS wkStreetAddr1,
        wk_street_addr2 AS wkStreetAddr2,
        wk_city_cd AS wkCityCd,
        wk_city_desc_txt AS wkCityDescTxt,
        wk_state_cd AS wkStateCd,
        wk_zip_cd AS wkZipCd,
        wk_cnty_cd AS wkCntyCd,
        wk_cntry_cd AS wkCntryCd,
        wk_phone_nbr AS wkPhoneNbr,
        wk_phone_cntry_cd AS wkPhoneCntryCd,
        wk_email_addr AS wkEmailAddr,
        SSN AS ssn,
        medicaid_num AS medicaidNum,
        dl_num AS dlNum,
        dl_state_cd AS dlStateCd,
        race_cd AS raceCd,
        race_seq_nbr AS raceSeqNbr,
        race_category_cd AS raceCategoryCd,
        ethnicity_group_cd AS ethnicityGroupCd,
        ethnic_group_seq_nbr AS ethnicGroupSeqNbr,
        adults_in_house_nbr AS adultsInHouseNbr,
        children_in_house_nbr AS childrenInHouseNbr,
        birth_city_cd AS birthCityCd,
        birth_city_desc_txt AS birthCityDescTxt,
        birth_cntry_cd AS birthCntryCd,
        birth_state_cd AS birthStateCd,
        race_desc_txt AS raceDescTxt,
        ethnic_group_desc_txt AS ethnicGroupDescTxt,
        as_of_date_admin AS asOfDateAdmin,
        as_of_date_ethnicity AS asOfDateEthnicity,
        as_of_date_general AS asOfDateGeneral,
        as_of_date_morbidity AS asOfDateMorbidity,
        as_of_date_sex AS asOfDateSex,
        electronic_ind AS electronicInd,
        person_parent_uid AS personParentUid,
        dedup_match_ind AS dedupMatchInd,
        group_nbr AS groupNbr,
        group_time AS groupTime,
        edx_ind AS edxInd,
        speaks_english_cd AS speaksEnglishCd,
        additional_gender_cd AS additionalGenderCd,
        ehars_id AS eharsId,
        ethnic_unk_reason_cd AS ethnicUnkReasonCd,
        sex_unk_reason_cd AS sexUnkReasonCd
    FROM Person
    WHERE person_uid = :personUid
""";


    public static final String MERGE_PERSON_NAME = """
    MERGE INTO Person_name AS target
    USING (SELECT 
               :personUid AS person_uid,
               :personNameSeq AS person_name_seq
          ) AS source
    ON (target.person_uid = source.person_uid AND target.person_name_seq = source.person_name_seq)
    WHEN MATCHED THEN 
        UPDATE SET
            add_reason_cd = :addReasonCd,
            add_time = :addTime,
            add_user_id = :addUserId,
            default_nm_ind = :defaultNmInd,
            duration_amt = :durationAmt,
            duration_unit_cd = :durationUnitCd,
            first_nm = :firstNm,
            first_nm_sndx = :firstNmSndx,
            from_time = :fromTime,
            last_chg_reason_cd = :lastChgReasonCd,
            last_chg_time = :lastChgTime,
            last_chg_user_id = :lastChgUserId,
            last_nm = :lastNm,
            last_nm_sndx = :lastNmSndx,
            last_nm2 = :lastNm2,
            last_nm2_sndx = :lastNm2Sndx,
            middle_nm = :middleNm,
            middle_nm2 = :middleNm2,
            nm_degree = :nmDegree,
            nm_prefix = :nmPrefix,
            nm_suffix = :nmSuffix,
            nm_use_cd = :nmUseCd,
            record_status_cd = :recordStatusCd,
            record_status_time = :recordStatusTime,
            status_cd = :statusCd,
            status_time = :statusTime,
            to_time = :toTime,
            user_affiliation_txt = :userAffiliationTxt,
            as_of_date = :asOfDate
    WHEN NOT MATCHED THEN
        INSERT (
            person_uid,
            person_name_seq,
            add_reason_cd,
            add_time,
            add_user_id,
            default_nm_ind,
            duration_amt,
            duration_unit_cd,
            first_nm,
            first_nm_sndx,
            from_time,
            last_chg_reason_cd,
            last_chg_time,
            last_chg_user_id,
            last_nm,
            last_nm_sndx,
            last_nm2,
            last_nm2_sndx,
            middle_nm,
            middle_nm2,
            nm_degree,
            nm_prefix,
            nm_suffix,
            nm_use_cd,
            record_status_cd,
            record_status_time,
            status_cd,
            status_time,
            to_time,
            user_affiliation_txt,
            as_of_date
        )
        VALUES (
            :personUid,
            :personNameSeq,
            :addReasonCd,
            :addTime,
            :addUserId,
            :defaultNmInd,
            :durationAmt,
            :durationUnitCd,
            :firstNm,
            :firstNmSndx,
            :fromTime,
            :lastChgReasonCd,
            :lastChgTime,
            :lastChgUserId,
            :lastNm,
            :lastNmSndx,
            :lastNm2,
            :lastNm2Sndx,
            :middleNm,
            :middleNm2,
            :nmDegree,
            :nmPrefix,
            :nmSuffix,
            :nmUseCd,
            :recordStatusCd,
            :recordStatusTime,
            :statusCd,
            :statusTime,
            :toTime,
            :userAffiliationTxt,
            :asOfDate
        );
""";

    public static final String SELECT_BY_PERSON_UID_ORDER_BY_SEQ_DESC = """
    SELECT 
        person_uid AS personUid,
        person_name_seq AS personNameSeq,
        add_reason_cd AS addReasonCd,
        add_time AS addTime,
        add_user_id AS addUserId,
        default_nm_ind AS defaultNmInd,
        duration_amt AS durationAmt,
        duration_unit_cd AS durationUnitCd,
        first_nm AS firstNm,
        first_nm_sndx AS firstNmSndx,
        from_time AS fromTime,
        last_chg_reason_cd AS lastChgReasonCd,
        last_chg_time AS lastChgTime,
        last_chg_user_id AS lastChgUserId,
        last_nm AS lastNm,
        last_nm_sndx AS lastNmSndx,
        last_nm2 AS lastNm2,
        last_nm2_sndx AS lastNm2Sndx,
        middle_nm AS middleNm,
        middle_nm2 AS middleNm2,
        nm_degree AS nmDegree,
        nm_prefix AS nmPrefix,
        nm_suffix AS nmSuffix,
        nm_use_cd AS nmUseCd,
        record_status_cd AS recordStatusCd,
        record_status_time AS recordStatusTime,
        status_cd AS statusCd,
        status_time AS statusTime,
        to_time AS toTime,
        user_affiliation_txt AS userAffiliationTxt,
        as_of_date AS asOfDate
    FROM Person_name
    WHERE person_uid = :parentUid
    ORDER BY person_name_seq DESC
""";


    public static final String MERGE_PERSON_RACE = """
            MERGE INTO Person_race AS target
            USING (
                SELECT
                    :personUid AS person_uid,
                    :raceCd AS race_cd
            ) AS source
            ON target.person_uid = source.person_uid AND target.race_cd = source.race_cd
            
            WHEN MATCHED THEN
                UPDATE SET
                    add_reason_cd = :addReasonCd,
                    add_time = :addTime,
                    add_user_id = :addUserId,
                    last_chg_reason_cd = :lastChgReasonCd,
                    last_chg_time = :lastChgTime,
                    last_chg_user_id = :lastChgUserId,
                    race_category_cd = :raceCategoryCd,
                    race_desc_txt = :raceDescTxt,
                    record_status_cd = :recordStatusCd,
                    record_status_time = :recordStatusTime,
                    user_affiliation_txt = :userAffiliationTxt,
                    as_of_date = :asOfDate
            
            WHEN NOT MATCHED THEN
                INSERT (
                    person_uid,
                    race_cd,
                    add_reason_cd,
                    add_time,
                    add_user_id,
                    last_chg_reason_cd,
                    last_chg_time,
                    last_chg_user_id,
                    race_category_cd,
                    race_desc_txt,
                    record_status_cd,
                    record_status_time,
                    user_affiliation_txt,
                    as_of_date
                )
                VALUES (
                    :personUid,
                    :raceCd,
                    :addReasonCd,
                    :addTime,
                    :addUserId,
                    :lastChgReasonCd,
                    :lastChgTime,
                    :lastChgUserId,
                    :raceCategoryCd,
                    :raceDescTxt,
                    :recordStatusCd,
                    :recordStatusTime,
                    :userAffiliationTxt,
                    :asOfDate
                );
            """;

    public static final String FIND_PERSON_RACE_BY_UID = """
            SELECT
                person_uid AS personUid,
                race_cd AS raceCd,
                add_reason_cd AS addReasonCd,
                add_time AS addTime,
                add_user_id AS addUserId,
                last_chg_reason_cd AS lastChgReasonCd,
                last_chg_time AS lastChgTime,
                last_chg_user_id AS lastChgUserId,
                race_category_cd AS raceCategoryCd,
                race_desc_txt AS raceDescTxt,
                record_status_cd AS recordStatusCd,
                record_status_time AS recordStatusTime,
                user_affiliation_txt AS userAffiliationTxt,
                as_of_date AS asOfDate
            FROM Person_race
            WHERE person_uid = :parentUid
    """;

    public static final String MERGE_PERSON_ETHNIC_GROUP = """
    MERGE INTO Person_ethnic_group AS target
    USING (SELECT
               :personUid AS person_uid,
               :ethnicGroupCd AS ethnic_group_cd
          ) AS source
    ON (target.person_uid = source.person_uid AND target.ethnic_group_cd = source.ethnic_group_cd)
    WHEN MATCHED THEN
        UPDATE SET
            add_reason_cd = :addReasonCd,
            add_time = :addTime,
            add_user_id = :addUserId,
            ethnic_group_desc_txt = :ethnicGroupDescTxt,
            last_chg_reason_cd = :lastChgReasonCd,
            last_chg_time = :lastChgTime,
            last_chg_user_id = :lastChgUserId,
            record_status_cd = :recordStatusCd,
            record_status_time = :recordStatusTime,
            user_affiliation_txt = :userAffiliationTxt
    WHEN NOT MATCHED THEN
        INSERT (
            person_uid,
            ethnic_group_cd,
            add_reason_cd,
            add_time,
            add_user_id,
            ethnic_group_desc_txt,
            last_chg_reason_cd,
            last_chg_time,
            last_chg_user_id,
            record_status_cd,
            record_status_time,
            user_affiliation_txt
        )
        VALUES (
            :personUid,
            :ethnicGroupCd,
            :addReasonCd,
            :addTime,
            :addUserId,
            :ethnicGroupDescTxt,
            :lastChgReasonCd,
            :lastChgTime,
            :lastChgUserId,
            :recordStatusCd,
            :recordStatusTime,
            :userAffiliationTxt
        );
""";

}
