#server:
#  port: 8082
#  servlet:
#    context-path: /rti

management:
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true

cache:
  clientId: ${RC_CLIENT_ID}
  secret: ${RC_CLIENT_SECRET}
  token: ${RC_URL}${RC_EP_TOKEN:/data/api/auth/token}
  srte:
    cacheString: ${RC_URL}${RC_EP_CACHE_STR:/data/srte/cache/string}
    cacheContain: ${RC_URL}${RC_EP_CACHE_CONTAIN:/data/srte/cache/contain}
    cacheObject: ${RC_URL}${RC_EP_CACHE_OBJ:/data/srte/cache/object}
  odse:
    localId: ${RC_URL}${EP_CACHE_LOCALID:/data/odse/localId}

features:
  modernizedMatching:
    enabled: ${MODERNIZED_MATCHING_ENABLED:false}
    url: ${MODERNIZED_MATCHING_URL}

spring:
  main:
    web-application-type: none
  application:
    name: data-processing-service
  cache:
    cache-names: srte
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterAccess=0

kafka:
  topic:
    elr_micro_transaction: elr_unprocessed_transaction
    elr_micro: dp_elr_unprocessed
    elr_health_case: dp_elr_processing_public_health_case
    elr_handle_lab: dp_elr_processing_handle_lab
    elr_edx_log: dp_elr_edx_log
    elr_action_tracker: dp_elr_action_tracker
nbs:
  user: ${NBS_AUTH_USER:superuser}
  data:
    hiv_program_areas: ${HIV_PROG_AREA:}

---
spring:
  config:
    activate:
      on-profile: default
  datasource:
    hikari:
      maximum-pool-size: ${HIKARI_POOL_SIZE:40}
      connection-timeout: ${HIKARI_CON_TIMEOUT:300000}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:20}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:120000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1200000}
      pool-name: ${HIKARI_POOL_NAME:SQLServerHikariCP}
      leak-detection-threshold: ${LEAK_DETECTION_THRESHOLD:300000}
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: ${NBS_DBUSER}
    password: ${NBS_DBPASSWORD}
    nbs:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=${NBS_MSGOUTE_DB_NAME:NBS_MSGOUTE};encrypt=true;trustServerCertificate=true;
    odse:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=${NBS_ODSE_DB_NAME:NBS_ODSE};encrypt=true;trustServerCertificate=true;
    srte:
      url: jdbc:sqlserver://${NBS_DBSERVER};databaseName=${NBS_SRTE_DB_NAME:NBS_SRTE};encrypt=true;trustServerCertificate=true;
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    thread: ${KAFKA_THREAD:10}
    group-id: data-processing-group-init
    group-id-phc: data-processing-group-phc
    group-id-lab: data-processing-group-lab
    group-id-edx: data-processing-group-edx
    consumer:
      maxPollIntervalMs: 30000
#K8S Profile goes here

service:
  timezone: ${SERVICE_TZ:UTC}
#logging.level.org.apache.kafka.clients.consumer: DEBUG
