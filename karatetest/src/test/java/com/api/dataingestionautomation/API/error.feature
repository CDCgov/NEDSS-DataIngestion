@parallel=true
Feature: Verify if DI system can handle certain validation issues

  Background:
    * def oldfirstname = 'LinkLogic'
    * def oldlastname = 'datateam'
    * def FakerHelper = Java.type('com.api.dataingestionautomation.API.FakerHelper')
    * def randomFirstName = FakerHelper.getRandomFirstName()
    * def randomLastName = FakerHelper.getRandomLastName()
    * configure retry = { count: 5, interval: 10000 }
    * header Content-Type = 'text/plain'
    * header msgType = 'HL7'
    * def Thread = Java.type('java.lang.Thread')
    * callonce read('common.feature')
    * header Authorization = 'Bearer ' + token
    * url apiurl


  @error
  Scenario: Post an exact same HL7 message more than once and verify if validation fails in DI system. Capture the error stack trace
    * def hl7Message = "MSH|^~\\&|ABCLAB-INC^OID^ISO| ABCLAB ^12S11112222^LISA|ACBDEF^OID^ISO|EE^OID^ISO|||ORU^R01^ORU_R01|20121154045679992S|C|2.3.1|||||||||PHLabReport-NoAck^ELR_Receiver^5.12.789.6.903956.6.00^ISO\nPID|1||12345567234^^^^PI^NE_CLINIC&12A2345111||datateam^LinkLogic|||||||||||||||||||||||||\nORC|RE||||||||||||||||||||TEST LAB CENTER|1123 SAMPLE TEST.^APT 123^REDMOND^WA^98053|^^^^^111^1234567\nOBR|1||123222456AS^namespace^OID^ISO|699-9^ORGANISM COUNT^LN|||200603241455|||||||||||||||201205091533|||F\nOBX|1|ST|12345-1^MICROORGANISM IDENTIFIED^LN||||||||F||||||||\nSPM|1|^12348882000&namespace&OID&ISO||UNK^Unknown^NullFlavor|"
    * def modifiedmsg = hl7Message.replace(oldfirstname, randomFirstName)
    * def modifiedData = modifiedmsg.replace(oldlastname, randomLastName)
    * request modifiedData
    When method POST
    Then status 200
    And request modifiedData
    * header Content-Type = 'text/plain'
    * header msgType = 'HL7'
    * header Authorization = 'Bearer ' + token
    When method POST
    Then status 200
    * def dupid = response
    Given url checkerrorurl + dupid
    * header Authorization = 'Bearer ' + token
    And retry until response.errorMessageId == dupid
    When method GET
    Then status 200
    Then match response.errorStackTraceShort == "DuplicateHL7FileFoundException: HL7 document already exists in the database. Please check elr_raw table for the failed document. Record Id: " +  dupid
    Then match response.dltOccurrence == 1
    Then match response.createdBy == 'elr_raw_dlt'
    Then match response.updatedBy == 'elr_raw_dlt'
    Then match response.updatedOn == null
    Then match response.dltStatus == 'ERROR'
    Then match response.errorMessageSource == 'elr_raw'
    Then match response.message == modifiedData

  @error
  Scenario: Post an incorrect formatted HL7 message and verify if validation fails in DI system.
    * request "abcdef"
    When method POST
    Then status 200
    * def postiddd = response
    Given url checkerrorurl + postiddd
    * header Authorization = 'Bearer ' + token
    And retry until response.errorMessageId == postiddd
    When method GET
    Then status 200
    Then match response.errorStackTraceShort == "DiHL7Exception: Invalid Message Determine encoding for message. The following is the first 50 chars of the message for reference, although this may not be where the issue is: abcdef"
    Then match response.dltOccurrence == 1
    Then match response.createdBy == 'elr_raw_dlt'
    Then match response.updatedBy == 'elr_raw_dlt'
    Then match response.updatedOn == null
    Then match response.dltStatus == 'ERROR'
    Then match response.errorMessageSource == 'elr_raw'
    Then match response.message == "abcdef"

  @error
  Scenario: Post an an  HL7 message with invalid datetime and verify if validation fails in DI system.
    * def hl7Message = "FHS|^~\\&|ELR|Emergency Test Major Medical Center|CA|CASDHH|20119000||FHSeg|Generated by ELR Route|FHSAppGen 20119000 |Application Generate\nBHS|^~\\&|UHS|Centennial Hills Hospital Medical Center|NV|NVDOH| 20119000 ||BHSeg|Application Generated|BHSAppGen2 20119000|P\nMSH|^~\\&|UHS|Centennial Hills Hospital Medical Center^TBD^CLIA|NV|NVDOH|20119000113400-0400000||ORU^R01|20119000114444426234_1001_6|P|2.3.1|||||USA\nPID|1||0000000^^^ TestMeth emergency Medical Center&TBD&CLIA^MR^TestMeth Hospital Medical Center&TBD&CLIA~34564444^^^Cute Hospital Medical Center&TBD&CLIA^PI^ TestMeth Hospital Medical Center&TBD&CLIA~XxxXx3681^^^SSN&TBD&ISO^SS||XXXXLast^XXXXFirst||19000000000000|M||W|XXXXXXXXX^^YYYY^NV^45000^USA^C||^PRN^PH^^^333^5555533|||||||||N\nORC|RE|12345111333911002222133356003333223333^EHR^TBD^ISO|2015054000334|||||||||^Adrian^Adrian^^^^^^^L|SHM CABU|^ABB^PH^^^111^22233333|||||||SHM- Testmethod Hospital Center^L^^^^SHM- Testmethod Hospital Center&TBD&CLIA|222 Genius Happy hwy^^San Marcos^CA^92100-2222^^A^^11111|^^PH^^^711^1233000|1600 A UNICORN ST^^SAN MARCOS^CA^92100-1111^USA^A\nOBR|1|40823320473600001320150540003344228588^EHR^TBD^ISO|2011900000700|44444-1^Acute Hepatitis Panel^LN||| 2011900008880000000000 ||||||None| 2011900008880000000000|8003000000&Blood&SNM|^Samira^Samira^^^^^^^L|^XXX^PH^^^800^2223333|||||20119000222500||LAB|F\nOBX|1|CE|22327-1^Hepatitis C Antibody (Anti HCV)^LN^408^Hepatitis C Antibody (Anti HCV)^L|1|80000004^Reactive^SCT||||||F|||2011900008880000000000|29D1070766^ABC Medical Depot^LISA\nNTE|1||Performing Lab Address: 1623 Test Address Drive, San Marcos, CA  92100\nBTS|1|Generated by ELR Route\nFTS|1|Generated by Test ELR Route"
    * def modifiedmsg = hl7Message.replace(oldfirstname, randomFirstName)
    * def modifiedData = modifiedmsg.replace(oldlastname, randomLastName)
    * request modifiedData
    When method POST
    Then status 200
    * def postidddd = response
    Given url checkerrorurl + postidddd
    * header Authorization = 'Bearer ' + token
    And retry until response.errorMessageId == postidddd
    When method GET
    Then status 200
    Then match response.errorStackTraceShort == "DiHL7Exception: Invalid Message ca.uhn.hl7v2.validation.ValidationException: Validation failed: Primitive value '20119000113400-0400000' requires to be empty or a HL7 datetime string at MSH-6(0)"
    Then match response.dltOccurrence == 1
    Then match response.createdBy == 'elr_raw_dlt'
    Then match response.updatedBy == 'elr_raw_dlt'
    Then match response.updatedOn == null
    Then match response.dltStatus == 'ERROR'
    Then match response.errorMessageSource == 'elr_raw'
    Then match response.message == modifiedData

  @error
  Scenario: Post an HL7 message with invalid version and verify if validation fails in DI system.Capture the error stack trace as well.
    * def hl7Message = "FHS|^~\\&|ELR|Test Emergency Hospital Medical Center|CA|CAABH|20091234||FHSeg|Generated by ELR Route|FHSAppGen20091234|Application Generate\nBHS|^~\\&|UAB|Emergency Rolling Hills Hospital Medical Center|CA|CAABH|20091234||BHSeg|Application Generated|BBBTestGen20091234|P\nMSH|^~\\&|UAB|Emergency Rolling Hills Center^TBD^CAAA|CA|CAABH|20091234123456-0400000||ORU^R01|2009123412311123456_1234_6|P|2.2"
    * def modifiedmsg = hl7Message.replace(oldfirstname, randomFirstName)
    * def modifiedData = modifiedmsg.replace(oldlastname, randomLastName)
    * request modifiedData
    When method POST
    Then status 200
    * def postiddddd = response
    Given url checkerrorurl + postiddddd
    * header Authorization = 'Bearer ' + token
    * eval Thread.sleep(3000)
    When method GET
    Then status 200
    Then match response.errorStackTraceShort == "DiHL7Exception: Invalid Message ca.uhn.hl7v2.validation.ValidationException: Validation failed: Primitive value '20091234123456-0400000' requires to be empty or a HL7 datetime string at MSH-6(0)"
    Then match response.dltOccurrence == 1
    Then match response.createdBy == 'elr_raw_dlt'
    Then match response.updatedBy == 'elr_raw_dlt'
    Then match response.updatedOn == null
    Then match response.dltStatus == 'ERROR'
    Then match response.errorMessageSource == 'elr_raw'
    Then match response.message == modifiedData